FROM registry.redhat.io/ubi8/ubi:latest@sha256:534c2c0efa4150ede18e3f9d7480d3b9ec2a52e62bc91cd54e08ee7336819619 as builder

WORKDIR /opt/app-root/src
USER root

RUN dnf install --nodocs -y golang && \
    dnf clean all && \
    rm -rf /var/cache/yum

COPY .git .git
COPY opentelemetry-operator opentelemetry-operator
# this directory is checked by ecosystem-cert-preflight-checks task in Konflux
COPY opentelemetry-operator/LICENSE /licenses/
WORKDIR /opt/app-root/src/opentelemetry-operator

RUN  CGO_ENABLED=1 GOEXPERIMENT=strictfipsruntime go build -C ./cmd/otel-allocator -mod=mod -tags strictfipsruntime -o ./opentelemetry-target-allocator -trimpath -ldflags "-s -w"

FROM registry.redhat.io/ubi8/ubi-micro:latest@sha256:9ad92923c8d98240cf8df732b3e7a2f322df6e4e501b551deca2231b2679919e AS target-base

FROM registry.redhat.io/ubi8/ubi:latest@sha256:534c2c0efa4150ede18e3f9d7480d3b9ec2a52e62bc91cd54e08ee7336819619 as install-additional-packages
COPY --from=target-base / /mnt/rootfs
RUN rpm --root /mnt/rootfs --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
RUN dnf install --installroot /mnt/rootfs --releasever 8 --setopt install_weak_deps=false --setopt reposdir=/etc/yum.repos.d --nodocs -y openssl && \
    dnf clean all && \
    rm -rf /var/cache/yum
RUN rm -rf /mnt/rootfs/var/cache/*

FROM scratch
WORKDIR /
COPY --from=install-additional-packages /mnt/rootfs/ /

RUN mkdir /licenses
COPY opentelemetry-operator/LICENSE /licenses/.
COPY --from=builder /opt/app-root/src/opentelemetry-operator/cmd/otel-allocator/opentelemetry-target-allocator /usr/bin/opentelemetry-target-allocator

ARG USER_UID=1001
USER ${USER_UID}
ENTRYPOINT ["/usr/bin/opentelemetry-target-allocator"]

LABEL release="0.135.0-1" \
      version="0.135.0-1" \
      vendor="Red Hat, Inc." \
      distribution-scope="public" \
      url="https://github.com/open-telemetry/opentelemetry-operator" \
      com.redhat.component="opentelemetry-target-allocator-container" \
      name="rhosdt/opentelemetry-target-allocator-rhel8" \
      summary="OpenTelemetry Target allocator" \
      description="Prometheus target allocator for the OpenTelemetry collector" \
      cpe="cpe:/a:redhat:openshift_distributed_tracing:3.6::el8" \
      io.k8s.description="Target allocator for the OpenTelemetry collector." \
      io.openshift.expose-services="80:http" \
      io.openshift.tags="monitoring" \
      io.k8s.display-name="OpenTelemetry Target allocator"
