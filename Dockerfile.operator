FROM registry.redhat.io/ubi8/ubi:latest@sha256:534c2c0efa4150ede18e3f9d7480d3b9ec2a52e62bc91cd54e08ee7336819619 as builder

WORKDIR /opt/app-root/src
USER root

RUN dnf install --nodocs -y golang && \
    dnf clean all && \
    rm -rf /var/cache/yum

COPY .git .git
COPY opentelemetry-operator opentelemetry-operator
# this directory is checked by ecosystem-cert-preflight-checks task in Konflux
COPY opentelemetry-operator/LICENSE /licenses/
WORKDIR /opt/app-root/src/opentelemetry-operator

RUN exportOrFail() { echo $1; if [[ $1 == *= ]]; then echo "Error: empty variable assignment"; exit 1; else export "$1"; fi } && \
    exportOrFail VERSION_PKG="github.com/open-telemetry/opentelemetry-operator/internal/version" && \
    exportOrFail BUILD_DATE=`date -u +'%Y-%m-%dT%H:%M:%SZ'` && \
    exportOrFail OPERATOR_VERSION=`grep -v '\#' versions.txt | grep operator | awk -F= '{print $2}'` && \
    exportOrFail OTELCOL_VERSION=`grep -v '\#' versions.txt | grep opentelemetry-collector | awk -F= '{print $2}'` && \
    exportOrFail TARGETALLOCATOR_VERSION=`grep -v '\#' versions.txt | grep targetallocator | awk -F= '{print $2}'` && \
    exportOrFail OPERATOR_OPAMP_BRIDGE_VERSION=`grep -v '\#' versions.txt | grep operator-opamp-bridge | awk -F= '{print $2}'` && \
    exportOrFail AUTO_INSTRUMENTATION_JAVA_VERSION=`grep -v '\#' versions.txt | grep autoinstrumentation-java | awk -F= '{print $2}'` && \
    exportOrFail AUTO_INSTRUMENTATION_NODEJS_VERSION=`grep -v '\#' versions.txt | grep autoinstrumentation-nodejs | awk -F= '{print $2}'` && \
    exportOrFail AUTO_INSTRUMENTATION_PYTHON_VERSION=`grep -v '\#' versions.txt | grep autoinstrumentation-python | awk -F= '{print $2}'` && \
    exportOrFail AUTO_INSTRUMENTATION_DOTNET_VERSION=`grep -v '\#' versions.txt | grep autoinstrumentation-dotnet | awk -F= '{print $2}'` && \
    exportOrFail AUTO_INSTRUMENTATION_GO_VERSION=`grep -v '\#' versions.txt | grep autoinstrumentation-go | awk -F= '{print $2}'` && \
    exportOrFail AUTO_INSTRUMENTATION_APACHE_HTTPD_VERSION=`grep -v '\#' versions.txt | grep autoinstrumentation-apache-httpd | awk -F= '{print $2}'` && \
    exportOrFail AUTO_INSTRUMENTATION_NGINX_VERSION=`grep -v '\#' versions.txt | grep autoinstrumentation-nginx | awk -F= '{print $2}'` && \
    CGO_ENABLED=1 GOEXPERIMENT=strictfipsruntime go build -mod=mod -tags strictfipsruntime -o ./opentelemetry-operator -trimpath -ldflags "-s -w \
              -X ${VERSION_PKG}.version=${OPERATOR_VERSION} \
              -X ${VERSION_PKG}.buildDate=${BUILD_DATE} \
              -X ${VERSION_PKG}.otelCol=${OTELCOL_VERSION} \
              -X ${VERSION_PKG}.targetAllocator=${TARGETALLOCATOR_VERSION} \
              -X ${VERSION_PKG}.operatorOpAMPBridge=${OPERATOR_OPAMP_BRIDGE_VERSION} \
              -X ${VERSION_PKG}.autoInstrumentationJava=${AUTO_INSTRUMENTATION_JAVA_VERSION} \
              -X ${VERSION_PKG}.autoInstrumentationNodeJS=${AUTO_INSTRUMENTATION_NODEJS_VERSION} \
              -X ${VERSION_PKG}.autoInstrumentationPython=${AUTO_INSTRUMENTATION_PYTHON_VERSION} \
              -X ${VERSION_PKG}.autoInstrumentationDotNet=${AUTO_INSTRUMENTATION_DOTNET_VERSION} \
              -X ${VERSION_PKG}.autoInstrumentationGo=${AUTO_INSTRUMENTATION_GO_VERSION} \
              -X ${VERSION_PKG}.autoInstrumentationApacheHttpd=${AUTO_INSTRUMENTATION_APACHE_HTTPD_VERSION} \
              -X ${VERSION_PKG}.autoInstrumentationNginx=${AUTO_INSTRUMENTATION_NGINX_VERSION}"

FROM registry.redhat.io/ubi8/ubi-micro:latest@sha256:9ad92923c8d98240cf8df732b3e7a2f322df6e4e501b551deca2231b2679919e AS target-base

FROM registry.redhat.io/ubi8/ubi:latest@sha256:534c2c0efa4150ede18e3f9d7480d3b9ec2a52e62bc91cd54e08ee7336819619 as install-additional-packages
COPY --from=target-base / /mnt/rootfs
RUN rpm --root /mnt/rootfs --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
RUN dnf install --installroot /mnt/rootfs --releasever 8 --setopt install_weak_deps=false --setopt reposdir=/etc/yum.repos.d --nodocs -y openssl && \
    dnf clean all && \
    rm -rf /var/cache/yum
RUN rm -rf /mnt/rootfs/var/cache/*

FROM scratch
WORKDIR /
COPY --from=install-additional-packages /mnt/rootfs/ /

RUN mkdir /licenses
COPY opentelemetry-operator/LICENSE /licenses/.
COPY --from=builder /opt/app-root/src/opentelemetry-operator/opentelemetry-operator /usr/bin/opentelemetry-operator

ARG USER_UID=1001
USER ${USER_UID}
ENTRYPOINT ["/usr/bin/opentelemetry-operator"]

LABEL release="0.127.0-2" \
      version="0.127.0-2" \
      vendor="Red Hat, Inc." \
      distribution-scope="public" \
      url="https://github.com/open-telemetry/opentelemetry-operator" \
      com.redhat.component="opentelemetry-operator-container" \
      name="rhosdt/opentelemetry-rhel8-operator" \
      summary="OpenTelemetry Operator" \
      description="Operator for the OpenTelemetry collector" \
      io.k8s.description="Operator for the OpenTelemetry operator." \
      io.openshift.expose-services="" \
      io.openshift.tags="tracing" \
      io.k8s.display-name="OpenTelemetry Operator"

