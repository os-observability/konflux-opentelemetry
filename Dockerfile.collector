FROM brew.registry.redhat.io/rh-osbs/openshift-golang-builder:rhel_8_golang_1.23@sha256:ca0c771ecd4f606986253f747e2773fe2960a6b5e8e7a52f6a4797b173ac7f56 as builder

WORKDIR /opt/app-root/src
USER root

COPY .git .git
COPY redhat-opentelemetry-collector redhat-opentelemetry-collector
# this directory is checked by ecosystem-cert-preflight-checks task in Konflux
COPY redhat-opentelemetry-collector/LICENSE /licenses/
WORKDIR /opt/app-root/src/redhat-opentelemetry-collector

RUN CGO_ENABLED=1 GOEXPERIMENT=strictfipsruntime go build -C ./_build -mod=mod -tags strictfipsruntime -o opentelemetry-collector -trimpath -ldflags "-w"

COPY fips_check.sh .
RUN ./fips_check.sh

FROM registry.redhat.io/ubi8/ubi-minimal:latest@sha256:c38cc770631788157f8ea989df65ff30359c9f8af3246fef244b32caed9d5862
WORKDIR /

# Install the systemd package which provides journalctl required by journald receiver and add user to systemd-journal group.
# https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/journaldreceiver
RUN microdnf update -y && rm -rf /var/cache/yum && \
    microdnf install openssl systemd -y && \
    microdnf clean all

RUN mkdir /licenses
COPY opentelemetry-operator/LICENSE /licenses/.
COPY --from=builder /opt/app-root/src/redhat-opentelemetry-collector/_build/opentelemetry-collector /usr/bin/opentelemetry-collector
COPY redhat-opentelemetry-collector/configs/otelcol.yaml /etc/otelcol/config.yaml

ARG USER_UID=1001
RUN useradd -u ${USER_UID} otelcol && usermod -a -G systemd-journal otelcol
USER ${USER_UID}
ENTRYPOINT ["/usr/bin/opentelemetry-collector"]
CMD ["--config", "/etc/otelcol/config.yaml"]

LABEL com.redhat.component="opentelemetry-collector-container" \
      name="rhosdt/opentelemetry-collector-rhel8" \
      summary="OpenTelemetry Collector" \
      description="Collector for the distributed tracing system" \
      io.k8s.description="Collector for the distributed tracing system." \
      io.openshift.expose-services="4317:otlp,9411:zipkin" \
      io.openshift.tags="tracing" \
      io.k8s.display-name="OpenTelemetry Collector"
