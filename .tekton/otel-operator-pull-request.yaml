apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/os-observability/konflux-opentelemetry?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch == "development" &&
      (".tekton/multi-arch-build-pipeline.yaml".pathChanged() ||
      ".tekton/otel-operator-pull-request.yaml".pathChanged() ||
      ".tekton/otel-operator-push.yaml".pathChanged() ||
      "Dockerfile.operator".pathChanged() ||
      "rpms.lock.yaml".pathChanged() ||
      "opentelemetry-operator".pathChanged())
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: otel-development
    appstudio.openshift.io/component: otel-operator-development
    pipelines.appstudio.openshift.io/type: build
  name: otel-operator-development-on-pull-request
  namespace: rhosdt-tenant
spec:
  taskRunSpecs:
    - pipelineTaskName: prefetch-dependencies
      computeResources:
        requests:
          cpu: 300m
          memory: 256Mi
        limits:
          memory: 4Gi
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: prefetch-input
    value: '[{"type": "gomod", "path": "./opentelemetry-operator"}, {"type": "rpm"}]'
  - name: hermetic
    value: "true"
  - name: prefetch-dev-package-managers-enabled
    value: "true"
  - name: output-image
    value: quay.io/redhat-user-workloads/rhosdt-tenant/otel/opentelemetry-operator:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: Dockerfile.operator
  - name: path-context
    value: .
  - name: build-source-image
    value: "true"
  - name: build-platforms
    value:
      - localhost
      - linux/arm64
  #     - linux/ppc64le
  #     - linux/s390x
  pipelineRef:
    name: build-pipeline
  taskRunTemplate: {}
  workspaces:
    - name: git-auth
      secret:
        secretName: '{{ git_auth_secret }}'
